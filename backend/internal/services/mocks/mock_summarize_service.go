// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/summarize_service_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	services "bedrock-rag-sample/backend/internal/services"
	context "context"
	multipart "mime/multipart"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSummarizeServiceInterface is a mock of SummarizeServiceInterface interface.
type MockSummarizeServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSummarizeServiceInterfaceMockRecorder
}

// MockSummarizeServiceInterfaceMockRecorder is the mock recorder for MockSummarizeServiceInterface.
type MockSummarizeServiceInterfaceMockRecorder struct {
	mock *MockSummarizeServiceInterface
}

// NewMockSummarizeServiceInterface creates a new mock instance.
func NewMockSummarizeServiceInterface(ctrl *gomock.Controller) *MockSummarizeServiceInterface {
	mock := &MockSummarizeServiceInterface{ctrl: ctrl}
	mock.recorder = &MockSummarizeServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSummarizeServiceInterface) EXPECT() *MockSummarizeServiceInterfaceMockRecorder {
	return m.recorder
}

// SummarizeFile mocks base method.
func (m *MockSummarizeServiceInterface) SummarizeFile(ctx context.Context, file *multipart.FileHeader) (*services.SummarizeResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SummarizeFile", ctx, file)
	ret0, _ := ret[0].(*services.SummarizeResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SummarizeFile indicates an expected call of SummarizeFile.
func (mr *MockSummarizeServiceInterfaceMockRecorder) SummarizeFile(ctx, file interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SummarizeFile", reflect.TypeOf((*MockSummarizeServiceInterface)(nil).SummarizeFile), ctx, file)
}

// SummarizeFileByS3Key mocks base method.
func (m *MockSummarizeServiceInterface) SummarizeFileByS3Key(ctx context.Context, s3Key string) (*services.SummarizeResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SummarizeFileByS3Key", ctx, s3Key)
	ret0, _ := ret[0].(*services.SummarizeResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SummarizeFileByS3Key indicates an expected call of SummarizeFileByS3Key.
func (mr *MockSummarizeServiceInterfaceMockRecorder) SummarizeFileByS3Key(ctx, s3Key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SummarizeFileByS3Key", reflect.TypeOf((*MockSummarizeServiceInterface)(nil).SummarizeFileByS3Key), ctx, s3Key)
}

// SummarizeText mocks base method.
func (m *MockSummarizeServiceInterface) SummarizeText(ctx context.Context, text string) (*services.SummarizeResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SummarizeText", ctx, text)
	ret0, _ := ret[0].(*services.SummarizeResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SummarizeText indicates an expected call of SummarizeText.
func (mr *MockSummarizeServiceInterfaceMockRecorder) SummarizeText(ctx, text interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SummarizeText", reflect.TypeOf((*MockSummarizeServiceInterface)(nil).SummarizeText), ctx, text)
}
