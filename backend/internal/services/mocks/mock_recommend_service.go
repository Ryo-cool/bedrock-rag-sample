// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/recommend_service_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "bedrock-rag-sample/backend/internal/domain"
	services "bedrock-rag-sample/backend/internal/services"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRecommendServiceInterface is a mock of RecommendServiceInterface interface.
type MockRecommendServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRecommendServiceInterfaceMockRecorder
}

// MockRecommendServiceInterfaceMockRecorder is the mock recorder for MockRecommendServiceInterface.
type MockRecommendServiceInterfaceMockRecorder struct {
	mock *MockRecommendServiceInterface
}

// NewMockRecommendServiceInterface creates a new mock instance.
func NewMockRecommendServiceInterface(ctrl *gomock.Controller) *MockRecommendServiceInterface {
	mock := &MockRecommendServiceInterface{ctrl: ctrl}
	mock.recorder = &MockRecommendServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecommendServiceInterface) EXPECT() *MockRecommendServiceInterfaceMockRecorder {
	return m.recorder
}

// FindSimilarDocuments mocks base method.
func (m *MockRecommendServiceInterface) FindSimilarDocuments(ctx context.Context, query string, limit int) (*services.RecommendResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindSimilarDocuments", ctx, query, limit)
	ret0, _ := ret[0].(*services.RecommendResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindSimilarDocuments indicates an expected call of FindSimilarDocuments.
func (mr *MockRecommendServiceInterfaceMockRecorder) FindSimilarDocuments(ctx, query, limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindSimilarDocuments", reflect.TypeOf((*MockRecommendServiceInterface)(nil).FindSimilarDocuments), ctx, query, limit)
}

// ProcessDocumentForEmbedding mocks base method.
func (m *MockRecommendServiceInterface) ProcessDocumentForEmbedding(ctx context.Context, doc *domain.Document) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessDocumentForEmbedding", ctx, doc)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessDocumentForEmbedding indicates an expected call of ProcessDocumentForEmbedding.
func (mr *MockRecommendServiceInterfaceMockRecorder) ProcessDocumentForEmbedding(ctx, doc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessDocumentForEmbedding", reflect.TypeOf((*MockRecommendServiceInterface)(nil).ProcessDocumentForEmbedding), ctx, doc)
}
